<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blog posts on Arjun Mahishi</title>
    <link>https://arjunmahishi.com/posts/</link>
    <description>Recent content in Blog posts on Arjun Mahishi</description>
    <image>
      <url>https://arjunmahishi.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://arjunmahishi.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 31 Aug 2022 20:49:58 +0530</lastBuildDate><atom:link href="https://arjunmahishi.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Remote Write Dummy Metrics</title>
      <link>https://arjunmahishi.com/posts/remote-write-dummy-metrics/</link>
      <pubDate>Wed, 31 Aug 2022 20:49:58 +0530</pubDate>
      
      <guid>https://arjunmahishi.com/posts/remote-write-dummy-metrics/</guid>
      <description>While working on any system built on top of prometheus based storage, you might want to use dummy data for testing. But prometheus based storages (prometheus, victoriaMetrics, m3db etc) don’t support “insert” queries like SQL. So, this doc will walk you through how to remote_write data into prometheus without having to write any code
Setup   Make sure you have a tool that can spin up a simple HTTP server that can serve static files.</description>
    </item>
    
    <item>
      <title>Returning empty interfaces in Golang</title>
      <link>https://arjunmahishi.com/posts/empty-interfaces-golang/</link>
      <pubDate>Sat, 08 Jan 2022 12:49:31 +0530</pubDate>
      
      <guid>https://arjunmahishi.com/posts/empty-interfaces-golang/</guid>
      <description>This week I ran into a bug with an empty interface{} which highlighted a smell in the code. This post describes what the bug is, how I fixed it, and the lessons learned.
The Bug We found a couple of recovered panics in the logs. These panics were happening pretty frequently. This is what the panic message said:
 panic: interface conversion: interface {} is nil, not []*typeName
 From the panic message, it is pretty obvious that somewhere in the code we are trying to convert an interface{} to a specific array type when the value is actually nil.</description>
    </item>
    
    <item>
      <title>Initialization Loop in Golang</title>
      <link>https://arjunmahishi.com/posts/initialization-loop-golang/</link>
      <pubDate>Sun, 22 Aug 2021 10:00:00 +0530</pubDate>
      
      <guid>https://arjunmahishi.com/posts/initialization-loop-golang/</guid>
      <description>A couple of days ago, I was writing a program in Go and ran into an initialization loop. I was able to quickly fix it with 1 google search which landed on this StackOverflow question. But it didn&amp;rsquo;t explain what an init loop is and why it occurs. So, this post is an attempt to explain the what and the why.
Example of an init loop package main var ( globalFunc = func1 ) func main() {} func func1() { func2() } func func2() { globalFunc() } Trying to compile the above code will give you this error:</description>
    </item>
    
    <item>
      <title>Using Golang&#39;s Stringer tool</title>
      <link>https://arjunmahishi.com/posts/golang-stringer/</link>
      <pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arjunmahishi.com/posts/golang-stringer/</guid>
      <description>Straight from the documentation:
 Stringer is a tool to automate the creation of methods that satisfy the fmt.Stringer interface. Given the name of a (signed or unsigned) integer type T that has constants defined, stringer will create a new self-contained Go source file implementing:
func (t T) String() string The file is created in the same package and directory as the package that defines T. It has helpful defaults designed for use with go generate.</description>
    </item>
    
    <item>
      <title>Test-driven development with Golang</title>
      <link>https://arjunmahishi.com/posts/tdd-with-golang/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://arjunmahishi.com/posts/tdd-with-golang/</guid>
      <description>Testing — An activity hated by most human beings Testing is an investigation done to make sure that the code we have written is reliable and meets the given requirements. The most common way to test code is to write unit tests for different units of the codebase. This makes it easy to isolate the bugs. All of the software development processes include testing as an integral part. The one we are going to talk about today is called Test Driven Development or TDD in short.</description>
    </item>
    
  </channel>
</rss>
