<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>vim on Arjun Mahishi</title>
    <link>https://arjunmahish.com/tags/vim/</link>
    <description>Recent content in vim on Arjun Mahishi</description>
    <image>
      <url>https://arjunmahish.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://arjunmahish.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 05 Nov 2021 11:44:01 +0530</lastBuildDate><atom:link href="https://arjunmahish.com/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rewriting my existing neovim config in lua</title>
      <link>https://arjunmahish.com/vim-adventures/vimscript-to-lua-migration/</link>
      <pubDate>Fri, 05 Nov 2021 11:44:01 +0530</pubDate>
      
      <guid>https://arjunmahish.com/vim-adventures/vimscript-to-lua-migration/</guid>
      <description>I&amp;rsquo;ve been wanting to rewrite my neovim config in Lua for a really long time. I didn&amp;rsquo;t really know why. Just wanted to do it. Lua has a more sane and intuitive syntax compared to vimscript. So, it ends up being easier to maintain, refactor and extend. Plus, I think the entire neovim community is moving forward in this direction. I am hearing good things about vimscript in vim9, but maybe that will be an opportunity for another such blog post.</description>
    </item>
    
    <item>
      <title>Prettify JSON in Vim</title>
      <link>https://arjunmahish.com/vim-adventures/prettify-json/</link>
      <pubDate>Sun, 10 Oct 2021 19:00:00 +0530</pubDate>
      
      <guid>https://arjunmahish.com/vim-adventures/prettify-json/</guid>
      <description>TL;DR au filetype json nmap &amp;lt;leader&amp;gt;f :%!jq &amp;#39;.&amp;#39; %&amp;lt;CR&amp;gt; Challenge If you have ever opened a large auto-generated JSON file, you probably would have wanted to pull your hair out. To be able to read it easily, you would have to copy the whole thing, open an online JSON formatting tool, paste it, get the formatted output and read it.
I knew that jq can be used on CLI to format JSON, so I wanted to use that from within vim to do the formatting and skip the above circus.</description>
    </item>
    
    <item>
      <title>Tapping into the system clipboard</title>
      <link>https://arjunmahish.com/vim-adventures/tapping-into-system-clipboard/</link>
      <pubDate>Sun, 11 Jul 2021 10:45:42 +0530</pubDate>
      
      <guid>https://arjunmahish.com/vim-adventures/tapping-into-system-clipboard/</guid>
      <description>TL;DR vmap &amp;lt;leader&amp;gt;y &amp;#34;*y nmap &amp;lt;leader&amp;gt;p &amp;#34;*p Challenge Copying text to and from vim and the outside world is a pain in the ass. This is because vim&amp;rsquo;s default register where it stores text copied with y is scoped only to that perticular vim session.
Solution Add this to your vimrc/init.vim:
vmap &amp;lt;leader&amp;gt;y &amp;#34;*y nmap &amp;lt;leader&amp;gt;p &amp;#34;*p This is basically mapping &amp;lt;leader&amp;gt; + y to run the &amp;quot;*y command. The &amp;quot; tells vim which register to use, * is the register that is shared with the system clipboard and y is the action (copy).</description>
    </item>
    
  </channel>
</rss>
